<!DOCTYPE html>
<html>
  <head>
    <link rel='stylesheet' href='/stylesheets/style.css' />
    <!-- <script src="https://cdn.jsdelivr.net/npm/axios@1.1.2/dist/axios.min.js"></script> -->
    <!-- <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script> -->
    <script src="https://unpkg.com/axios@1.1.2/dist/axios.min.js"></script>
    <script>
      // 拦截器， request
      axios.interceptors.request.use(function (config) {
          // Do something before request is sent
          // 发送请求前，需要将 token 设置到请求头中
          const token = localStorage.getItem('token');
          // config.headers.Authorization = `Bearer ${token}`;
          config.headers.Authorization = `${token}`;
          return config;
        }, function (error) {
          // Do something with request error
          return Promise.reject(error);
        });


      // 拦截器 - response
      axios.interceptors.response.use(function (response) {
          // Any status code that lie within the range of 2xx cause this function to trigger
          // Do something with response data
          console.log(222, response);
          return response;
        }, function (error) {
          // Any status codes that falls outside the range of 2xx cause this function to trigger
          // Do something with response error
          console.log('response error === ', error);
          // token 失效后，这里统一处理
          const {status} = error.response
          if(status===401){
              localStorage.removeItem("token")
              window.location.href="/login"
          }
          return Promise.reject(error);
        });
    </script>
  </head>
  <body>
    <h1>
      后台系统 - 用户管理业务
      <button id="logout" >退出登录</button>
    </h1>

    <div>
      <div class="inline">用户名： <input type="text" id="username" /></div>
      <div class="inline">密码： <input type="password" id="password" /></div>
      <div class="inline">年龄： <input type="text" id="age" /></div>
      <div class="inline"><button id="registerBtn">添加用户</button></div>
      <hr/>

      <div>
        <button id="updateBtn">更新用户</button>
        <input type="text" id="updateId"/>
      </div>
      <div>
        <button id="deleteBtn">删除用户</button>
        <input type="text" id="deleteId"/>
      </div>
    </div>
    <hr/>

    <h3>用户信息表（分页）
      <input type="number" value='1' id="pageInput">
    </h3>
    <table>
      <thead>
        <tr>
          <td>Id</td>
          <td>用户名</td>
          <td>年龄</td>
        </tr>
      </thead>
      <tbody id="tbody-page"></tbody>
    </table>
    <hr/>

    <h3>用户信息表（ALL）</h3>
    <table>
      <thead>
        <tr>
          <td>Id</td>
          <td>用户名</td>
          <td>密码</td>
          <td>年龄</td>
        </tr>
      </thead>
      <tbody id="tbody"></tbody>
    </table>

    <script>
      const registerBtn = document.querySelector('#registerBtn');
      const logoutBtn = document.querySelector('#logout');
      const updateBtn = document.querySelector('#updateBtn');
      const deleteBtn = document.querySelector('#deleteBtn');

      const tbody = document.querySelector('#tbody');
      const tbodyPage = document.querySelector('#tbody-page');
      const pageInput = document.querySelector('#pageInput');

      registerBtn.onclick = function () {
        const username = document.getElementById("username");
        const password = document.getElementById("password");
        const age = document.getElementById("age");

        console.log(100, username.value, password.value, age.value);
        axios.post('/api/user', {
          username: username.value,
          password: password.value,
          age: age.value,
        }).then((res) => {
          if (res?.data?.ok === 1) {
            getListALL();
          }
          // alert('注册成功');
        });
      }

      updateBtn.onclick = function () {
        const username = document.getElementById("username");
        const password = document.getElementById("password");
        const age = document.getElementById("age");
        const id = document.getElementById('updateId');

        if (!id?.value) {
          alert('请先输入 id ');
          return;
        }

        axios.put(`/api/user/${id.value}`, {
            username: username.value,
            password: password.value,
            age: age.value,
        }).then((res) => {
          getListALL();
          // alert('update 成功');
        });
      }


      deleteBtn.onclick = function () {
        const username = document.getElementById("username");
        const password = document.getElementById("password");
        const age = document.getElementById("age");
        const id = document.getElementById('deleteId');

        if (!id?.value) {
          alert('请先输入 id ');
          return;
        }
        
        axios.delete(`/api/user/${id.value}`).then((res) => {
          getListALL();
          // alert('delete 成功');
        });
      }

      pageInput.onclick = function() {
        const pageNo = pageInput.value;
        console.log("pageNo === ", pageNo);
        getListByPage(pageNo);
      }

  getListALL();
  function getListALL () {
    axios.get('/api/user').then(res => {
      // // 如果 ok 为 0 ，表示 session 过期了， 跳转到登陆页面
      // if (res?.ok === 0) {
      //     location.href = '/login';
      //     return
      //   }

        console.log(res);
        tbody.innerHTML = (res?.data?.data || []).map(item => `
          <tr>
            <td>${item._id}</td>
            <td>${item.username}</td>
            <td>${item.password}</td>
            <td>${item.age}</td>
          </tr>
        `).join('');
    })
  }

  getListByPage();
  function getListByPage (pageNo = 1) {
    axios.get('/api/user?pageNo='+pageNo+'&pageSize=2').then((res) => {
        // // 如果 ok 为 0 ，表示 session 过期了， 跳转到登陆页面
        // if (res?.ok === 0) {
        //     location.href = '/login';
        //     return
        // }  
        console.log(res.data);
        tbodyPage.innerHTML = (res?.data?.data || []).map(item => `
          <tr>
            <td>${item._id}</td>
            <td>${item.username}</td>
            <td>${item.age}</td>
          </tr>
        `).join('');
      })
  }
      
  logoutBtn.onclick = () => {
    localStorage.removeItem('token');
    location.href = '/login';
    // fetch('/api/logout').then(res => res.json()).then(res => {
    //   if (res?.ok === 1){
    //     location.href = '/login';
    //   } else {
    //     alert('退出登录失败');
    //   }
    // })
  }
    
      
    </script>
  </body>
</html>
